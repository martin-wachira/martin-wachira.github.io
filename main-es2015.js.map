{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/favorite/favorite.component.html","./src/app/home/welcome.component.html","./src/app/login/login.component.html","./src/app/movies/movie.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/favorite/favorite.component.scss","./src/app/favorite/favorite.component.ts","./src/app/home/register.service.ts","./src/app/home/welcome.component.scss","./src/app/home/welcome.component.ts","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/movies/filter.pipe.ts","./src/app/movies/movie.component.scss","./src/app/movies/movie.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,iJAAiJ,kBAAkB,eAAe,OAAO,gCAAgC,cAAc,8EAA8E,6DAA6D,2CAA2C,OAAO,C;;;;;;;;;;;ACApa,ukBAAukB,OAAO,kGAAkG,oMAAoM,sTAAsT,qlBAAqlB,YAAY,sKAAsK,YAAY,6FAA6F,kBAAkB,6FAA6F,eAAe,6W;;;;;;;;;;;ACAxpE,8mBAA8mB,OAAO,sGAAsG,0MAA0M,+QAA+Q,+xCAA+xC,8sIAA8sI,gBAAgB,mrGAAmrG,usBAAusB,aAAa,2LAA2L,aAAa,mGAAmG,mBAAmB,mGAAmG,gBAAgB,8OAA8O,4BAA4B,mL;;;;;;;;;;;ACAnvW,6qG;;;;;;;;;;;ACAA,ulBAAulB,OAAO,kGAAkG,yQAAyQ,oDAAoD,aAAa,sjBAAsjB,cAAc,uPAAuP,gBAAgB,8PAA8P,mBAAmB,iQAAiQ,YAAY,mPAAmP,aAAa,gQAAgQ,mBAAmB,oQAAoQ,aAAa,oPAAoP,cAAc,2M;;;;;;;;;;;;;;;;;;;;;;;ACA/1G;AACjB;AACM;AACQ;AACE;AACG;AACM;AAElE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wEAAgB,EAAE;IACjD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sEAAc,EAAE;IAChD,2DAA2D;IAC3D,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;CAE1D,CAAC;AAUF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAR5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;QACvB,YAAY,EAAE,EAAE;KACjB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;AC3B7B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,kBAAkB,CAAC;IAC7B,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP0C;AACP;AACV;AACc;AACR;AACE;AACjB;AACsC;AACvB;AACE;AACQ;AAEnB;AAEa;AACF;AACD;AACS;AAChB;AA6BlD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAxBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,4DAAY;YACZ,yEAAgB;YAChB,uEAAc;YACd,sEAAc;YACd,+EAAiB;YACjB,+DAAU;SACX;QACD,OAAO,EAAE;YACP,uEAAa;YACb,mEAAmB;YACnB,wEAAkB,CAAC,OAAO,EAAE;YAC5B,4FAAuB;YACvB,oEAAgB;YAChB,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;YACrD,8EAAsB;YACtB,gFAAyB;YACzB,2DAAW;YACX,qEAAgB;SACjB;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;AC/CtB,+DAA+D,mJ;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAG5B;QAFA,eAAU,GAAC,EAAE,CAAC;IAEE,CAAC;IAGjB,QAAQ,KAAK,CAAC;CAEf;AARY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0JAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAQ7B;AAR6B;;;;;;;;;;;;;;;;;;;;;;;ACPa;AACsC;AACnC;AAET;AAC4E;AACpD;AAK7D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAO1B,YAAoB,IAAgB,EAAS,EAAoB,EAAU,EAAuB;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAS,OAAE,GAAF,EAAE,CAAkB;QAAU,OAAE,GAAF,EAAE,CAAqB;QAEhG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;QAExF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE;YACtE,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACrB,MAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAY,CAAC;gBAC5C,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC3B,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,YAAY,EAAE;aACzB,IAAI,CACD,0DAAG,CAAC,CAAC,MAAgB,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAC3D,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,GAAsB;QACxC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,GAAG,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,YAAY,GAAG,sBAAsB,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAC1D;aAAM;YACL,YAAY,GAAG,yBAAyB,GAAG,CAAC,MAAM,uBAAuB,GAAG,CAAC,OAAO,EAAE,CAAC;SACxF;QACD,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5B,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAGD,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE;YAClE,OAAO,EAAE,MAAM;SAChB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,IAAS;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE,IAAI,EAAE;YAC/D,OAAO,EAAE,MAAM;SAChB,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAsC,EAAE;YAC3D,OAAO,EAAE,MAAM;YACf,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACxE,CAAC,CAAC;IAEL,CAAC;CAEF;;YAxD2B,+DAAU;YAAa,wEAAgB;YAAc,0EAAmB;;AAPvF,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA+D3B;AA/D2B;;;;;;;;;;;;ACX5B,6CAA6C,sBAAsB,GAAG,+BAA+B,6FAA6F,GAAG,8DAA8D,6FAA6F,GAAG,iCAAiC,wBAAwB,GAAG,0CAA0C,8BAA8B,GAAG,4DAA4D,qBAAqB,GAAG,mBAAmB,4BAA4B,GAAG,QAAQ,iBAAiB,gBAAgB,qBAAqB,GAAG,QAAQ,iBAAiB,GAAG,mBAAmB,gBAAgB,kBAAkB,GAAG,6CAA6C,2+G;;;;;;;;;;;;;;;;;;;;;ACAhwB;AACmC;AAChC;AACG;AAE2B;AAQnF,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAiB3B,YAAoB,EAAe,EACzB,OAAwB,EACxB,MAAc,EACd,OAAuB,EACvB,EAAoB;QAJV,OAAE,GAAF,EAAE,CAAa;QACzB,YAAO,GAAP,OAAO,CAAiB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,OAAE,GAAF,EAAE,CAAkB;QApB9B,mBAAc,GAAG,EAAE,CAAC;QAGpB,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAG,EAAE,CAAC;QAEhB,iBAAY,GAAG,EAAE,CAAC;QAIlB,cAAS,GAAY,KAAK,CAAC;QAEnB,uBAAkB,GAAG;YAC3B,QAAQ,EAAE,6BAA6B;SACxC,CAAC;IAM+B,CAAC;IAGlC,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAGH,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;IAEJ,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,UAAU,CAAC,CAAkB;QAC3B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;YACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAC1C,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClD;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;iBACnD,SAAS,CACR,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,GAAG,0BAA0B,EACxD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,GAAG,aAAa,CAC7C,CAAC;SACL;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;CACF;;YApEyB,0DAAW;YAChB,iEAAe;YAChB,sDAAM;YACL,8DAAc;YACnB,wEAAgB;;AArBnB,gBAAgB;IAN5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oJAAuC;;KAExC,CAAC;GAEW,gBAAgB,CAqF5B;AArF4B;;;;;;;;;;;;ACb7B,wBAAwB,mBAAmB,GAAG,cAAc,uBAAuB,GAAG,6CAA6C,+lB;;;;;;;;;;;;;;;;;;;;ACAjF;AACO;AAC4B;AAC1B;AAQ3D,IAAa,cAAc,GAA3B,MAAa,cAAc;IAGzB,YAAoB,EAAe,EACzB,OAAwB,EACxB,MAAc,EACd,OAAuB;QAHb,OAAE,GAAF,EAAE,CAAa;QACzB,YAAO,GAAP,OAAO,CAAiB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;IAAI,CAAC;IAEtC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,WAAW;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC;IAC5F,CAAC;IAED,KAAK;QACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;iBACrC,SAAS,CACR,IAAI,CAAC,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,CAAC,EACD,KAAK,CAAC,EAAE,GAAG,CAAC,CACb,CAAC;SACL;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IACpE,CAAC;CAEF;;YApCyB,0DAAW;YAChB,sEAAe;YAChB,sDAAM;YACL,8DAAc;;AANtB,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,iJAAqC;;KAEtC,CAAC;GACW,cAAc,CAuC1B;AAvC0B;AAwC3B,CAAC;;;;;;;;;;;;;;;;;;ACnDmD;AAMpD,IAAa,UAAU,GAAvB,MAAa,UAAU;IAErB,SAAS,CAAC,KAAe,EAAE,UAAkB;QAC3C,IAAG,CAAC,KAAK,IAAI,CAAC,UAAU,EAAC;YACvB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CACzB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAClE,CAAC;IACJ,CAAC;CAEF;AAZY,UAAU;IAHtB,0DAAI,CAAC;QACJ,IAAI,EAAE,QAAQ;KACf,CAAC;GACW,UAAU,CAYtB;AAZsB;;;;;;;;;;;;ACNvB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAN;AACI;AACX;AASlD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,OAAwB,EAAU,OAAuB;QAAzD,YAAO,GAAP,OAAO,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAgB;IAAG,CAAC;IAEjF,QAAQ;QACN,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,KAAK,EAAC;YACR,MAAM,EAAE,GAAG,KAAK,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACnB;IACH,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAClC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK;SAClC,CAAC,CAAC;IACL,CAAC;CAEF;;YAhB8B,sEAAe;YAAmB,8DAAc;;AAJlE,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kJAAqC;;KAEtC,CAAC;GACW,cAAc,CAoB1B;AApB0B;;;;;;;;;;;;;ACX3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,mCAAmC;QAC/C,WAAW,EAAE,0CAA0C;QACvD,SAAS,EAAE,mBAAmB;QAC9B,aAAa,EAAE,+BAA+B;QAC9C,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACzBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\n<!-- <app-welcome></app-welcome> -->\\n<!-- <app-login></app-login> -->\\n<p style=\\\"color: red; font-weight: 400;\\\"></p>\\n&nbsp; &nbsp;\\n<p style=\\\"text-align: center; color: green; font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\\">Application by Martin Wachira | All Rights Reserved &copy; 2019 Andela|Google|Pluralsight</p>\\n&nbsp; &nbsp;\"","module.exports = \"<!--Navbar-->\\n<mdb-navbar SideClass=\\\"navbar navbar-expand-lg navbar-dark maroon\\\" [containerInside]=\\\"false\\\">\\n    <!-- Navbar brand -->\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"/assets/images/netflix.jpg\\\" height=\\\"120\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"mini_netflix logo\\\">\\n    </a>\\n    <div class=\\\"row\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li class=\\\"nav-item\\\">\\n                <button mdbBtn type=\\\"button\\\" color=\\\"danger\\\" rounded=\\\"true\\\">Favorites</button>\\n            </li>\\n\\n            &nbsp; &nbsp;\\n            <li class=\\\"nav-item pull-right\\\">\\n                <input style=\\\"margin-top: 10px;\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search\\\"\\n                    [(ngModel)]=\\\"searchText\\\">\\n            </li>\\n            <!-- <a class=\\\"nav-link\\\" style=\\\"margin-top: 10px;\\\">Search</a> -->\\n        </ul>\\n    </div>\\n\\n</mdb-navbar>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <!--Card-->\\n        <mdb-card cascade=\\\"true\\\" wider=\\\"true\\\">\\n\\n            <!-- Card image-->\\n            <div class=\\\"view view-cascade overlay waves-light\\\" style=\\\"height: 250px;\\\" mdbWavesEffect>\\n                <!-- <mdb-card-img [src]='item.imgUrl'>\\n                </mdb-card-img> -->\\n                <a>\\n                    <div class=\\\"mask rgba-black-slight\\\"></div>\\n                </a>\\n            </div>\\n            <!--/Card image -->\\n\\n            <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\n                <!--Card content-->\\n                <!--Title-->\\n                <h4 class=\\\"card-title\\\">\\n                    <strong></strong>\\n                </h4>\\n                <h5 class=\\\"indigo-text\\\">\\n                    <!-- <strong>{{item.title}}</strong> -->\\n                </h5>\\n\\n                <mdb-card-text>\\n\\n                    <!-- <ul>\\n                        <li>\\n                            {{item.title}}\\n                        </li>\\n                        <li>\\n                            {{item.releaseDate}}\\n                        </li>\\n                        <li>\\n                            {{item.director}}\\n                        </li>\\n                    </ul> -->\\n                </mdb-card-text>\\n\\n                <!-- <button mdbBtn type=\\\"button\\\" color=\\\"danger\\\" rounded=\\\"true\\\" (click)=\\\"likeMovie(item)\\\">like</button> -->\\n\\n            </mdb-card-body>\\n            <!--/.Card content-->\\n\\n        </mdb-card>\\n        <!--/.Card-->\\n    </div>\\n</div>\"","module.exports = \"<!--Navbar-->\\r\\n<mdb-navbar SideClass=\\\"navbar navbar-expand-lg navbar-dark maroon\\\" [containerInside]=\\\"false\\\">\\r\\n\\r\\n    <!-- Navbar brand -->\\r\\n    <a class=\\\"navbar-brand\\\">\\r\\n        <img src=\\\"/assets/images/netflix.jpg\\\" height=\\\"120\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"mini_netflix logo\\\">\\r\\n    </a>\\r\\n    <div class=\\\"row\\\">\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <button mdbBtn type=\\\"button\\\" color=\\\"danger\\\" rounded=\\\"true\\\" (click)=\\\"gotoFav()\\\">Favorites</button>\\r\\n            </li>\\r\\n\\r\\n            &nbsp; &nbsp;\\r\\n            <li class=\\\"nav-item pull-right\\\">\\r\\n                <input style=\\\"margin-top: 10px;\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                    [(ngModel)]=\\\"searchText\\\">\\r\\n            </li>\\r\\n            <!-- <a class=\\\"nav-link\\\" style=\\\"margin-top: 10px;\\\">Search</a> -->\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n    <links>\\r\\n\\r\\n        <!-- Links -->\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a style=\\\"color: green\\\" (click)=\\\"moveToLogin()\\\">Sign in</a> &nbsp;\\r\\n                <button mdbBtn type=\\\"button\\\" color=\\\"danger\\\" rounded=\\\"true\\\" outline=\\\"true\\\" mdbWavesEffect type=\\\"button\\\"\\r\\n                    mdbBtn rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#basicExample\\\" (click)=\\\"frame.show()\\\"\\r\\n                    mdbWavesEffect>Sign Up</button>\\r\\n\\r\\n                <div mdbModal #frame=\\\"mdbModal\\\" class=\\\"modal fade top\\\" id=\\\"frameModalTop\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n                    aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n                    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n                        <!--Content-->\\r\\n                        <div class=\\\"modal-content form-elegant\\\">\\r\\n                            <!--Header-->\\r\\n                            <div class=\\\"modal-header text-center\\\">\\r\\n                                <h3 class=\\\"modal-title w-100 dark-grey-text font-weight-bold my-3\\\" id=\\\"myModalLabel\\\">\\r\\n                                    <strong>Sign Up</strong>\\r\\n                                </h3>\\r\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n                                    (click)=\\\"frame.hide()\\\">\\r\\n                                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <!--Body-->\\r\\n                            <div class=\\\"modal-body mx-4\\\">\\r\\n                                <!--Body-->\\r\\n\\r\\n                                <form [formGroup]=\\\"validatingForm\\\">\\r\\n                                    <div class=\\\"md-form form-sm\\\">\\r\\n                                        <mdb-icon fas icon=\\\"user\\\" class=\\\"prefix grey-text\\\"></mdb-icon>\\r\\n                                        <input style=\\\"color: rgb(126, 93, 93)\\\" type=\\\"text\\\" id=\\\"Form-username1\\\"\\r\\n                                            formControlName=\\\"username\\\" class=\\\"form-control\\\" mdbInput mdbValidate>\\r\\n                                        <label for=\\\"Form-username1\\\">Username</label>\\r\\n                                        <mdb-error *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\">\\r\\n                                            Input invalid\\r\\n                                        </mdb-error>\\r\\n                                        <!-- <mdb-success *ngIf=\\\"username.valid && (username.dirty || username.touched)\\\">\\r\\n                                        Input valid\\r\\n                                    </mdb-success> -->\\r\\n                                    </div>\\r\\n\\r\\n\\r\\n                                    <div class=\\\"md-form form-sm\\\">\\r\\n                                        <mdb-icon fas icon=\\\"envelope\\\" class=\\\"prefix grey-text\\\"></mdb-icon>\\r\\n                                        <input type=\\\"email\\\" style=\\\"color: rgb(126, 93, 93)\\\" id=\\\"Form-email1\\\"\\r\\n                                            formControlName=\\\"email\\\" class=\\\"form-control\\\" mdbInput mdbValidate>\\r\\n                                        <label for=\\\"Form-email1\\\">Email</label>\\r\\n                                        <mdb-error *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\r\\n                                            Input invalid\\r\\n                                        </mdb-error>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"md-form form-sm\\\">\\r\\n                                        <mdb-icon fas icon=\\\"lock\\\" class=\\\"prefix grey-text\\\"></mdb-icon>\\r\\n                                        <input type=\\\"password\\\" style=\\\"color: rgb(126, 93, 93)\\\" id=\\\"Form-pass1\\\"\\r\\n                                            formControlName=\\\"password\\\" class=\\\"form-control\\\" mdbInput mdbValidate>\\r\\n                                        <label for=\\\"Form-pass1\\\">Your password</label>\\r\\n                                        <mdb-error *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\r\\n                                            Input invalid\\r\\n                                        </mdb-error>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                    <!-- <div class=\\\"md-form form-sm\\\">\\r\\n                                        <mdb-icon fas icon=\\\"lock\\\" class=\\\"prefix grey-text\\\"></mdb-icon>\\r\\n                                        <input type=\\\"password\\\" style=\\\"color: rgb(126, 93, 93)\\\" formControlName=\\\"cnfpass\\\" class=\\\"form-control\\\" mdbInput mdbValidate>\\r\\n                                        <label for=\\\"form23\\\">Confirm</label>\\r\\n                                        <mdb-error>\\r\\n                                            Input invalid\\r\\n                                        </mdb-error>\\r\\n                                        <mdb-success *ngIf=\\\"cnfpass.valid && (cnfpass.dirty || cnfpass.touched)\\\">\\r\\n                                            Input valid\\r\\n                                        </mdb-success>\\r\\n                                        <p class=\\\"font-small blue-text d-flex justify-content-end\\\">Forgot\\r\\n                                            <a href=\\\"#\\\" class=\\\"blue-text ml-1\\\"> Password?</a>\\r\\n                                        </p>\\r\\n                                </div> -->\\r\\n\\r\\n                                    <div class=\\\"md-form form-sm\\\">\\r\\n\\r\\n                                        <mdb-success>\\r\\n                                            {{successMessage}}\\r\\n                                        </mdb-success>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"text-center mb-3\\\">\\r\\n                                        <button type=\\\"button\\\" mdbBtn gradient=\\\"blue\\\" block=\\\"true\\\" rounded=\\\"true\\\"\\r\\n                                            class=\\\"z-depth-1a waves-light\\\" mdbWavesEffect color=\\\"success\\\"\\r\\n                                            (click)=\\\"register()\\\">Sign up\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n\\r\\n                                </form>\\r\\n\\r\\n\\r\\n                                <p class=\\\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\\\">\\r\\n                                    or Sign in\\r\\n                                    with:</p>\\r\\n\\r\\n                                <div class=\\\"row my-3 d-flex justify-content-center\\\">\\r\\n                                    <!--Facebook-->\\r\\n                                    <button type=\\\"button\\\" mdbBtn color=\\\"white\\\" rounded=\\\"true\\\"\\r\\n                                        class=\\\"mr-md-3 z-depth-1a waves-light\\\" mdbWavesEffect>\\r\\n                                        <mdb-icon fab icon=\\\"facebook-f\\\" class=\\\"text-center\\\"></mdb-icon>\\r\\n                                    </button>\\r\\n                                    <!--Twitter-->\\r\\n                                    <button type=\\\"button\\\" mdbBtn color=\\\"white\\\" rounded=\\\"true\\\"\\r\\n                                        class=\\\"mr-md-3 z-depth-1a waves-light\\\" mdbWavesEffect>\\r\\n                                        <mdb-icon fab icon=\\\"twitter\\\"></mdb-icon>\\r\\n                                    </button>\\r\\n                                    <!--Google +-->\\r\\n                                    <button type=\\\"button\\\" mdbBtn color=\\\"white\\\" rounded=\\\"true\\\"\\r\\n                                        class=\\\"z-depth-1a waves-light\\\" mdbWavesEffect>\\r\\n                                        <mdb-icon fab icon=\\\"google-plus\\\"></mdb-icon>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                                <!--Footer-->\\r\\n                                <div class=\\\"modal-footer mx-5 pt-3 mb-1\\\">\\r\\n                                    <p class=\\\"font-small grey-text d-flex justify-content-end\\\">Already have an Account?\\r\\n                                        <a class=\\\"blue-text ml-1\\\" (click)=\\\"moveToLogin()\\\"> Sign In</a>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--/.Content-->\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </li>\\r\\n        </ul>\\r\\n        <!-- Links -->\\r\\n    </links>\\r\\n\\r\\n</mdb-navbar>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\" *ngFor=\\\"let movie of movies | filter:searchText\\\">\\r\\n        <!--Card-->\\r\\n        <mdb-card cascade=\\\"true\\\" wider=\\\"true\\\">\\r\\n\\r\\n            <!-- Card image-->\\r\\n            <div class=\\\"view view-cascade overlay waves-light\\\" style=\\\"height: 250px;\\\" mdbWavesEffect>\\r\\n                <!-- <a [routerLink]=\\\"[ '/movie', movie.id ]\\\"> -->\\r\\n                <a (click)=\\\"gotoDetails(movie.id)\\\">\\r\\n                    <mdb-card-img [src]='movie.imgUrl'>\\r\\n                    </mdb-card-img>\\r\\n                    <div class=\\\"mask rgba-black-slight\\\"></div>\\r\\n                </a>\\r\\n            </div>\\r\\n            \\r\\n\\r\\n            <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\r\\n                <!--Card content-->\\r\\n                <!--Title-->\\r\\n                <h4 class=\\\"card-title\\\">\\r\\n                    <strong></strong>\\r\\n                </h4>\\r\\n                <h5 class=\\\"indigo-text\\\">\\r\\n                    <strong>{{movie.title}}</strong>\\r\\n                </h5>\\r\\n\\r\\n                <mdb-card-text>\\r\\n                \\r\\n                    <ul>\\r\\n                        <li>\\r\\n                            {{movie.title}}\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            {{movie.releaseDate}}\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            {{movie.director}}\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </mdb-card-text>\\r\\n\\r\\n                <button mdbBtn type=\\\"button\\\" color=\\\"danger\\\" rounded=\\\"true\\\" (click)=\\\"toggleLike()\\\">\\r\\n                    {{showLike ? 'Like' : 'Like'}}\\r\\n                </button>\\r\\n\\r\\n            </mdb-card-body>\\r\\n            <!--/.Card content-->\\r\\n\\r\\n        </mdb-card>\\r\\n        <!--/.Card-->\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<mdb-navbar SideClass=\\\"navbar navbar-expand-lg navbar-dark maroon\\\" [containerInside]=\\\"false\\\">\\n\\n        <!-- Navbar brand -->\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n            <img src=\\\"/assets/images/netflix.jpg\\\" height=\\\"120\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"mini_netflix logo\\\">\\n        </a>\\n    \\n    </mdb-navbar>\\n    \\n\\n\\n<!-- Material form login -->\\n\\n<mdb-card class=\\\"col-md-4\\\">\\n\\n        <mdb-card-header class=\\\"info-color white-text text-center py-4\\\">\\n          <h5>\\n            <strong>Sign in</strong>\\n          </h5>\\n        </mdb-card-header>\\n      \\n      \\n        <!--Card content-->\\n        <mdb-card-body class=\\\"px-lg-5 pt-0\\\">\\n      \\n          <!-- Form -->\\n          <form class=\\\"text-center\\\" [formGroup]=\\\"loginForm\\\">\\n      \\n            <!-- Email -->\\n            <div class=\\\"md-form\\\">\\n              <input type=\\\"email\\\" id=\\\"materialLoginFormEmail\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" mdbInput>\\n              <label for=\\\"materialLoginFormEmail\\\">E-mail</label>\\n              <mdb-error *ngIf=\\\"isValid('email')\\\">Email cannot be blank</mdb-error>\\n            </div>\\n      \\n            <!-- Password -->\\n            <div class=\\\"md-form\\\">\\n              <input type=\\\"password\\\" id=\\\"materialLoginFormPassword\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" mdbInput>\\n              <label for=\\\"materialLoginFormPassword\\\">Password</label>\\n              <mdb-error *ngIf=\\\"isValid('password')\\\">Password cannot be blank</mdb-error>\\n            </div>\\n\\n            \\n            <div class=\\\"d-flex justify-content-around\\\">\\n              <div>\\n                <!-- Remember me -->\\n                <mdb-checkbox>Remember me</mdb-checkbox>\\n              </div>\\n              <div>\\n                <!-- Forgot password -->\\n                <a href=\\\"\\\">Forgot password?</a>\\n              </div>\\n            </div>\\n      \\n            <!-- Sign in button -->\\n            <button mdbBtn color=\\\"info\\\" outline=\\\"true\\\" rounded=\\\"true\\\" block=\\\"true\\\" class=\\\"my-4 waves-effect z-depth-0\\\" mdbWavesEffect\\n              type=\\\"submit\\\" (click)=\\\"login()\\\">Sign in</button>\\n      \\n            <!-- Register -->\\n            <p>Not a member?\\n              <a class=\\\"blue-text ml-1\\\" (click)=\\\"moveToRegister()\\\">Register</a>\\n            </p>\\n      \\n            <!-- Social login -->\\n            <p>or sign in with:</p>\\n            <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" color=\\\"fb\\\" size=\\\"sm\\\">\\n              <mdb-icon fab icon=\\\"facebook\\\"></mdb-icon>\\n            </a>\\n            <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" color=\\\"tw\\\" size=\\\"sm\\\">\\n              <mdb-icon fab icon=\\\"twitter\\\"></mdb-icon>\\n            </a>\\n            <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" color=\\\"li\\\" size=\\\"sm\\\">\\n              <mdb-icon fab icon=\\\"linkedin\\\"></mdb-icon>\\n            </a>\\n            <a type=\\\"button\\\" mdbBtn floating=\\\"true\\\" color=\\\"git\\\" size=\\\"sm\\\">\\n              <mdb-icon fab icon=\\\"github\\\"></mdb-icon>\\n            </a>\\n      \\n          </form>\\n          <!-- Form -->\\n      \\n        </mdb-card-body>\\n      \\n      </mdb-card>\\n      <!-- Material form login -->\"","module.exports = \"<mdb-navbar SideClass=\\\"navbar navbar-expand-lg navbar-dark maroon\\\" [containerInside]=\\\"false\\\">\\n    <!-- Navbar brand -->\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"/assets/images/netflix.jpg\\\" height=\\\"120\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"mini_netflix logo\\\">\\n    </a>\\n    <div class=\\\"row\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li class=\\\"nav-item\\\">\\n                    <a href=\\\"favorite\\\"> <button mdbBtn type=\\\"button\\\" color=\\\"danger\\\" rounded=\\\"true\\\"> Favorites</button></a>\\n            </li>\\n\\n            &nbsp; &nbsp;\\n            <li class=\\\"nav-item pull-right\\\">\\n                <input style=\\\"margin-top: 10px;\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search\\\"\\n                    [(ngModel)]=\\\"searchText\\\">\\n            </li>\\n\\n        </ul>\\n    </div>\\n\\n</mdb-navbar>\\n\\n<section *ngIf=\\\"movie\\\">\\n\\n    <!--Section heading-->\\n    <h2 style=\\\"color:green;\\\" class=\\\"h1 py-5 font-weight-bold text-center\\\">{{movie.title}}</h2>\\n    \\n    <!--Grid row-->\\n    <div class=\\\"row pt-2\\\">\\n\\n        <!--Grid column-->\\n        <div class=\\\"col-lg-5 text-center text-lg-left\\\">\\n            <img [src]='movie.imgUrl' alt=\\\"\\\" class=\\\"img-fluid z-depth-0\\\">\\n        </div>\\n\\n        <div class=\\\"col-lg-7\\\">\\n\\n            <!--Grid row-->\\n            <div class=\\\"row pb-3\\\">\\n                <div class=\\\"col-10\\\"  *ngIf=\\\"movie.author\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Author</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.author}}</p>\\n                </div>\\n\\n                <div class=\\\"col-10\\\"  *ngIf=\\\"movie.director\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Author</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.director}}</p>\\n                </div>\\n\\n                <div class=\\\"col-10\\\" *ngIf=\\\"movie.description\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Description</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.description}}</p>\\n                </div>\\n                \\n                <div class=\\\"col-10\\\"  *ngIf=\\\"movie.plot\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Plot</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.plot}}</p>\\n                </div>\\n\\n                <div class=\\\"col-10\\\"  *ngIf=\\\"movie.genre\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Genre</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.genre}}</p>\\n                </div>\\n\\n                <div class=\\\"col-10\\\"  *ngIf=\\\"movie.releaseDate\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Release Date</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.releaseDate}}</p>\\n                </div>\\n                \\n                <div class=\\\"col-10\\\"  *ngIf=\\\"movie.award\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Awards</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.award}}</p>\\n                </div>\\n\\n                <div class=\\\"col-10\\\" *ngIf=\\\"movie.rating\\\">\\n                    <h5 class=\\\"font-weight-bold text-left mb-3 dark-grey-text\\\">Rating</h5>\\n                    <p class=\\\"grey-text text-left\\\">{{movie.rating}}</p>\\n                </div>\\n            </div>\\n            <!--Grid row-->\\n\\n        </div>\\n        <!--Grid column-->\\n\\n    </div>\\n    <!--Grid row-->\\n\\n</section>\\n<!--Section: Features v.3-->\"","import { MovieComponent } from './movies/movie.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { WelcomeComponent } from './home/welcome.component';\r\nimport { FavoriteComponent } from './favorite/favorite.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'register', component: WelcomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'favorite', component: FavoriteComponent },\r\n  { path: 'movie', component: MovieComponent },\r\n  { path: 'movie/:id', component: MovieComponent },\r\n  // { path: '', redirectTo: 'register', pathMatch: 'full' },\r\n  { path: '**', redirectTo: 'register', pathMatch: 'full' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mdb-angular-free';\n}\n","import { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from './../environments/environment';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore'\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { WelcomeComponent } from './home/welcome.component';\nimport { MovieComponent } from './movies/movie.component';\nimport { LoginComponent } from './login/login.component';\nimport { FavoriteComponent } from './favorite/favorite.component';\nimport { FilterPipe } from './movies/filter.pipe';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    MovieComponent,\n    LoginComponent,\n    FavoriteComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    MDBBootstrapModule.forRoot(),\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireDatabaseModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zhdm9yaXRlL2Zhdm9yaXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorite',\n  templateUrl: './favorite.component.html',\n  styleUrls: ['./favorite.component.scss']\n})\nexport class FavoriteComponent implements OnInit {\n  searchText='';\n\n  constructor() { }\n\n\n  ngOnInit() { }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { IMovie } from './../movies/movie';\r\nimport { map } from 'rxjs/operators';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  movieCollection: AngularFirestoreCollection<IMovie>;\r\n  movies: Observable<IMovie[]>;\r\n  movieDoc: AngularFirestoreDocument<IMovie>;\r\n\r\n\r\n  constructor(private http: HttpClient, public fs: AngularFirestore, private db: AngularFireDatabase) {\r\n\r\n    this.movieCollection = this.fs.collection('movies', ref => ref.orderBy('title', 'asc'));\r\n\r\n    this.movies = this.movieCollection.snapshotChanges().pipe(map(changes => {\r\n      return changes.map(a => {\r\n        const data = a.payload.doc.data() as IMovie;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      });\r\n    }));\r\n  }\r\n\r\n  getAllMovies() {\r\n    return this.movies;\r\n  }\r\n\r\n  getMovie(id: string): Observable<IMovie | undefined>{\r\n    return this.getAllMovies()\r\n    .pipe(\r\n        map((movies: IMovie[]) => movies.find(m => m.id === id))\r\n    );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An Error Occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server Returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n\r\n  submitRegister(body: any) {\r\n    return this.http.post('http://localhost:3000/users/register', body, {\r\n      observe: 'body'\r\n    });\r\n  }\r\n\r\n  login(body: any) {\r\n    return this.http.post('http://localhost:3000/users/login', body, {\r\n      observe: 'body'\r\n    });\r\n  }\r\n\r\n  getUserName() {\r\n    return this.http.get('http://localhost:3000/users/username', {\r\n      observe: 'body',\r\n      params: new HttpParams().append('token', localStorage.getItem('token'))\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".form-elegant .font-small {\\n  font-size: 0.8rem;\\n}\\n\\n.form-elegant .z-depth-1a {\\n  box-shadow: 0 2px 5px 0 rgba(55, 161, 255, 0.26), 0 4px 12px 0 rgba(121, 155, 254, 0.25);\\n}\\n\\n.form-elegant .z-depth-1-half,\\n.form-elegant .btn:hover {\\n  box-shadow: 0 5px 11px 0 rgba(85, 182, 255, 0.28), 0 4px 15px 0 rgba(36, 133, 255, 0.15);\\n}\\n\\n.form-elegant .modal-header {\\n  border-bottom: none;\\n}\\n\\n.modal-dialog .form-elegant .btn .fa {\\n  color: #2196f3 !important;\\n}\\n\\n.form-elegant .modal-body, .form-elegant .modal-footer {\\n  font-weight: 400;\\n}\\n\\nmdb-card-body {\\n  background-color: black;\\n}\\n\\nhr {\\n  color: green;\\n  height: 5px;\\n  font-weight: 100;\\n}\\n\\nh4 {\\n  color: white;\\n}\\n\\nimg.img-fluid {\\n  width: 40px;\\n  height: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9EOlxcUHJvamVjdHNcXEFuZ3VsYXJcXE1pbmlOZXRmbGl4XFxuZXRmbGl4TWluaS9zcmNcXGFwcFxcaG9tZVxcd2VsY29tZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvaG9tZS93ZWxjb21lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7QUNDSjs7QURDSTtFQUVBLHdGQUFBO0FDRUo7O0FEQUk7O0VBR0Esd0ZBQUE7QUNHSjs7QURESTtFQUNBLG1CQUFBO0FDSUo7O0FERkk7RUFDQSx5QkFBQTtBQ0tKOztBREhJO0VBQ0EsZ0JBQUE7QUNNSjs7QURISTtFQUNJLHVCQUFBO0FDTVI7O0FESEk7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0FDTVI7O0FESEk7RUFDSSxZQUFBO0FDTVI7O0FESEk7RUFDSSxXQUFBO0VBQ0EsYUFBQTtBQ01SIiwiZmlsZSI6InNyYy9hcHAvaG9tZS93ZWxjb21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tZWxlZ2FudCAuZm9udC1zbWFsbCB7XHJcbiAgICBmb250LXNpemU6IDAuOHJlbTsgfVxyXG4gICAgXHJcbiAgICAuZm9ybS1lbGVnYW50IC56LWRlcHRoLTFhIHtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1NSwgMTYxLCAyNTUsIDAuMjYpLCAwIDRweCAxMnB4IDAgcmdiYSgxMjEsIDE1NSwgMjU0LCAwLjI1KTtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoNTUsIDE2MSwgMjU1LCAwLjI2KSwgMCA0cHggMTJweCAwIHJnYmEoMTIxLCAxNTUsIDI1NCwgMC4yNSk7IH1cclxuICAgIFxyXG4gICAgLmZvcm0tZWxlZ2FudCAuei1kZXB0aC0xLWhhbGYsXHJcbiAgICAuZm9ybS1lbGVnYW50IC5idG46aG92ZXIge1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDVweCAxMXB4IDAgcmdiYSgyNTUsIDg1LCA4NSwgMC4yOCksIDAgNHB4IDE1cHggMCByZ2JhKDI1NSwgNTQsIDM2LCAwLjE1KTtcclxuICAgIGJveC1zaGFkb3c6IDAgNXB4IDExcHggMCByZ2JhKDg1LCAxODIsIDI1NSwgMC4yOCksIDAgNHB4IDE1cHggMCByZ2JhKDM2LCAxMzMsIDI1NSwgMC4xNSk7IH1cclxuICAgIFxyXG4gICAgLmZvcm0tZWxlZ2FudCAubW9kYWwtaGVhZGVyIHtcclxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IH1cclxuICAgIFxyXG4gICAgLm1vZGFsLWRpYWxvZyAuZm9ybS1lbGVnYW50IC5idG4gLmZhIHtcclxuICAgIGNvbG9yOiAjMjE5NmYzIWltcG9ydGFudDsgfVxyXG4gICAgXHJcbiAgICAuZm9ybS1lbGVnYW50IC5tb2RhbC1ib2R5LCAuZm9ybS1lbGVnYW50IC5tb2RhbC1mb290ZXIge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxyXG5cclxuICAgIC8vIGN1c3RvbWUgc3R5bGUgQGF1dGhvcj13Y3JcclxuICAgIG1kYi1jYXJkLWJvZHl7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICB9XHJcblxyXG4gICAgaHJ7XHJcbiAgICAgICAgY29sb3I6IGdyZWVuO1xyXG4gICAgICAgIGhlaWdodDogNXB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICB9XHJcblxyXG4gICAgaDQge1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTsgIFxyXG4gICAgfVxyXG5cclxuICAgIGltZy5pbWctZmx1aWQge1xyXG4gICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICB9XHJcblxyXG4iLCIuZm9ybS1lbGVnYW50IC5mb250LXNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjhyZW07XG59XG5cbi5mb3JtLWVsZWdhbnQgLnotZGVwdGgtMWEge1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoNTUsIDE2MSwgMjU1LCAwLjI2KSwgMCA0cHggMTJweCAwIHJnYmEoMTIxLCAxNTUsIDI1NCwgMC4yNSk7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoNTUsIDE2MSwgMjU1LCAwLjI2KSwgMCA0cHggMTJweCAwIHJnYmEoMTIxLCAxNTUsIDI1NCwgMC4yNSk7XG59XG5cbi5mb3JtLWVsZWdhbnQgLnotZGVwdGgtMS1oYWxmLFxuLmZvcm0tZWxlZ2FudCAuYnRuOmhvdmVyIHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDVweCAxMXB4IDAgcmdiYSgyNTUsIDg1LCA4NSwgMC4yOCksIDAgNHB4IDE1cHggMCByZ2JhKDI1NSwgNTQsIDM2LCAwLjE1KTtcbiAgYm94LXNoYWRvdzogMCA1cHggMTFweCAwIHJnYmEoODUsIDE4MiwgMjU1LCAwLjI4KSwgMCA0cHggMTVweCAwIHJnYmEoMzYsIDEzMywgMjU1LCAwLjE1KTtcbn1cblxuLmZvcm0tZWxlZ2FudCAubW9kYWwtaGVhZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbn1cblxuLm1vZGFsLWRpYWxvZyAuZm9ybS1lbGVnYW50IC5idG4gLmZhIHtcbiAgY29sb3I6ICMyMTk2ZjMgIWltcG9ydGFudDtcbn1cblxuLmZvcm0tZWxlZ2FudCAubW9kYWwtYm9keSwgLmZvcm0tZWxlZ2FudCAubW9kYWwtZm9vdGVyIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxubWRiLWNhcmQtYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG5ociB7XG4gIGNvbG9yOiBncmVlbjtcbiAgaGVpZ2h0OiA1cHg7XG4gIGZvbnQtd2VpZ2h0OiAxMDA7XG59XG5cbmg0IHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG5pbWcuaW1nLWZsdWlkIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogMzAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder, AbstractControl } from '@angular/forms';\r\nimport { RegisterService } from './register.service';\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { IMovie } from '../movies/movie';\r\nimport { AngularFirestore, AngularFirestoreModule } from '@angular/fire/firestore';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.scss']\r\n})\r\n\r\nexport class WelcomeComponent implements OnInit {\r\n  successMessage = '';\r\n  validatingForm: FormGroup;\r\n  passMessage: string;\r\n  showLike: boolean = false;\r\n  searchText = '';\r\n\r\n  errorMessage = '';\r\n\r\n  movies: IMovie[];\r\n  curMovie: IMovie;\r\n  editState: boolean = false;\r\n\r\n  private validationMessages = {\r\n    required: 'Please enter your password.',\r\n  };\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private service: RegisterService,\r\n    private router: Router,\r\n    private a_route: ActivatedRoute,\r\n    private db: AngularFirestore) {}\r\n\r\n\r\n  ngOnInit() {\r\n    this.validatingForm = this.fb.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n\r\n    this.service.getAllMovies().subscribe(movies => {\r\n      this.movies = movies;\r\n    })\r\n\r\n  }\r\n\r\n  gotoDetails(id){\r\n    this.router.navigate(['/movie', id]);\r\n  }\r\n\r\n  setMessage(c: AbstractControl): void {\r\n    this.passMessage = '';\r\n    if ((c.touched || c.dirty) && c.errors) {\r\n      this.passMessage = Object.keys(c.errors).map(\r\n        key => this.validationMessages[key]).join(' ');\r\n    }\r\n  }\r\n\r\n  toggleLike(): void {\r\n    this.showLike = !this.showLike; \r\n  }\r\n\r\n  register() {\r\n    console.log(this.validatingForm.value);\r\n\r\n    if (this.validatingForm.valid) {\r\n      this.service.submitRegister(this.validatingForm.value)\r\n        .subscribe(\r\n          data => this.successMessage = 'Registration Successfuly',\r\n          error => this.successMessage = 'Some errors'\r\n        );\r\n    }\r\n  }\r\n\r\n  moveToLogin() {\r\n    this.router.navigate(['../login'], { relativeTo: this.a_route });\r\n  }\r\n\r\n  gotoFav() {\r\n    this.router.navigate(['../favorite'], { relativeTo: this.a_route });\r\n  }\r\n\r\n  get username() {\r\n    return this.validatingForm.get('username');\r\n  }\r\n\r\n  get email() {\r\n    return this.validatingForm.get('email');\r\n  }\r\n\r\n  get password() {\r\n    return this.validatingForm.get('password');\r\n  }\r\n}\r\n","module.exports = \"form {\\n  color: #757575;\\n}\\n\\nmdb-card {\\n  margin-left: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRDpcXFByb2plY3RzXFxBbmd1bGFyXFxNaW5pTmV0ZmxpeFxcbmV0ZmxpeE1pbmkvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0o7O0FEQ0E7RUFDSSxrQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcclxuICAgIGNvbG9yOiAjNzU3NTc1XHJcbn1cclxubWRiLWNhcmQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDUwMHB4O1xyXG59IiwiZm9ybSB7XG4gIGNvbG9yOiAjNzU3NTc1O1xufVxuXG5tZGItY2FyZCB7XG4gIG1hcmdpbi1sZWZ0OiA1MDBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, Validators, FormBuilder, AbstractControl } from '@angular/forms';\nimport { RegisterService } from '../home/register.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n    private service: RegisterService,\n    private router: Router,\n    private a_route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  isValid(controlName) {\n    return this.loginForm.get(controlName).invalid && this.loginForm.get(controlName).touched;\n  }\n\n  login() {\n    console.log(this.loginForm.value);\n\n    if (this.loginForm.valid) {\n      this.service.login(this.loginForm.value)\n        .subscribe(\n          data => {\n            console.log(data);\n            localStorage.setItem('token', data.toString());\n            this.router.navigate(['/favorite']);\n          },\n          error => { },\n        );\n    }\n  }\n\n  moveToRegister () {\n    this.router.navigate(['../register'], {relativeTo: this.a_route});\n  }\n\n}\n;","import { Pipe, PipeTransform } from '@angular/core';\nimport { IMovie } from './movie';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(items: IMovie[], searchText: string): IMovie[] {\n    if(!items || !searchText){\n      return items;\n    }\n\n    return items.filter(item => \n      item.title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllcy9tb3ZpZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { RegisterService } from './../home/register.service';\nimport { Component, OnInit } from '@angular/core';\nimport { IMovie } from './movie';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.scss']\n})\nexport class MovieComponent implements OnInit {\n\n  movie: IMovie;\n\n  constructor(private service: RegisterService, private a_route: ActivatedRoute) {}\n\n  ngOnInit() {\n    let param = this.a_route.snapshot.paramMap.get('id');\n    if (param){\n      const id = param;\n      this.getMovie(id);\n    }\n  }\n\n  getMovie(id: string) {\n    this.service.getMovie(id).subscribe({\n      next: movie => this.movie = movie,\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyBuKNJVHq057JovzyBq1tVL8uIhI7YVXUw\",\n    authDomain: \"netflixmini-dc522.firebaseapp.com\",\n    databaseURL: \"https://netflixmini-dc522.firebaseio.com\",\n    projectId: \"netflixmini-dc522\",\n    storageBucket: \"netflixmini-dc522.appspot.com\",\n    messagingSenderId: \"243595701311\",\n    appId: \"1:243595701311:web:aecbbfe1ec29a843a4dc8a\",\n    measurementId: \"G-Z0Z471R5PK\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}